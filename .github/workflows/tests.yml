name: GitHub Actions CI
on:
  push:
    branches: master
  pull_request: []
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Set up Git repository
      uses: actions/checkout@master

    - name: Set up Homebrew
      id: set-up-homebrew
      run: |
        if which brew &>/dev/null; then
          HOMEBREW_REPOSITORY="$(brew --repo)"
          brew update-reset "$HOMEBREW_REPOSITORY"
          ln -s "$PWD" "$HOMEBREW_REPOSITORY/Library/Taps/homebrew/homebrew-test-bot"
        else
          HOMEBREW_PREFIX=/home/linuxbrew/.linuxbrew
          HOMEBREW_REPOSITORY="$HOMEBREW_PREFIX/Homebrew"
          sudo mkdir -p $HOMEBREW_PREFIX
          sudo git clone --depth=1 https://github.com/Homebrew/brew "$HOMEBREW_REPOSITORY"

          sudo mkdir -p "$HOMEBREW_REPOSITORY/Library/Taps/homebrew"
          sudo ln -s "$PWD" "$HOMEBREW_REPOSITORY/Library/Taps/homebrew/homebrew-test-bot"

          cd "$HOMEBREW_PREFIX"
          sudo mkdir -p bin etc include lib opt sbin share var/homebrew/linked Cellar
          sudo ln -sf ../Homebrew/bin/brew "$HOMEBREW_PREFIX/bin/"
          cd -

          export PATH="$HOMEBREW_PREFIX/bin:$PATH"
          echo "::add-path::$HOMEBREW_PREFIX/bin"
        fi

        if [ "$RUNNER_OS" = "Linux" ]; then
          sudo chown -R "$USER" "$HOMEBREW_PREFIX"
        fi

    - name: Set up Ruby
      if: matrix.os == 'ubuntu-latest'
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6'

    - name: Run brew style
      run: brew style homebrew/test-bot

    - name: Install Homebrew/homebrew-test-bot RubyGems
      run: |
        gem install bundler -v "~>1"
        bundle install --jobs 4 --retry 3

    - name: Run Homebrew/homebrew-test-bot RSpec tests
      run: bundle exec rspec

    - name: Build Docker image
      if: matrix.os == 'ubuntu-latest'
      run: docker-compose -f Dockerfile.yml build sut

    - name: Run brew test-bot
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          docker-compose -f Dockerfile.yml run --rm -v $GITHUB_WORKSPACE:/tmp/test-bot sut
        else
          brew test-bot
        fi

    - name: Output brew test-bot failures
      if: matrix.os == 'macOS-latest'
      run: |
        cat steps_output.txt
        rm steps_output.txt

    - name: Run brew test-bot --dry-run tests
      if: matrix.os == 'macOS-latest'
      run: |
        brew test-bot --ci-upload --dry-run
        brew test-bot --only-setup --dry-run
        brew test-bot testbottest --dry-run
        brew test-bot HEAD --dry-run
